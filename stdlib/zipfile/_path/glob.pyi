import re
from typing import Iterator

class Translator:
    seps: str

    def __init__(self, seps: str = ...) -> None: ...
    def translate(self, pattern: str) -> str: ...
    def extend(self, pattern: str) -> None: ...
    def translate_core(self, pattern: str) -> str: ...
    def replace(self, match: re.Match[str]) -> str: ...
    def restrict_rglob(self, pattern: str) -> None: ...
    def star_not_empty(self, pattern: str) -> str: ...

def separate(pattern: str) -> Iterator[re.Match[str]]: ...
